{"version":3,"sources":["pages/Dashboard/index.js","components/Table/index.js"],"names":["Dashboard","useEffect","document","title","useState","countries","setCountries","a","fetch","then","response","json","data","map","country","name","value","countryInfo","iso2","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","casesPerOneMillion","deathsPerOneMillion","tests","testsPerOneMillion","population","continent","oneCasePerPeople","oneDeathPerPeople","oneTestPerPeople","activePerOneMillion","recoveredPerOneMillion","criticalPerOneMillion","console","log","bill","reduce","acc","getCountriesData","className","size","length","style","textAlign","Table","styled","table"],"mappings":"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","file":"static/js/7.7f631052.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { FaHospitalAlt } from 'react-icons/fa';\r\nimport { BsPeopleFill } from 'react-icons/bs';\r\nimport { GrMapLocation } from 'react-icons/gr';\r\nimport { AiFillAlert } from 'react-icons/ai';\r\nimport { CardDashboard, Card } from '~/components/Card';\r\nimport { Table } from '~/components/Table';\r\n\r\nexport default function Dashboard() {\r\n    useEffect(() => {\r\n        document.title = 'Covid-19 Statistics'\r\n    }, []);\r\n\r\n    \r\nconst [countries,setCountries] = useState([]);\r\n\r\nuseEffect(() => {\r\n  const getCountriesData = async () => {\r\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => response.json()) // when it comes back with the response get the entire response and just take the json from it.\r\n      .then((data) => {\r\n        const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n            cases: country.cases,\r\n            todayCases: country.todayCases,\r\n            deaths: country.deaths,\r\n            todayDeaths: country.todayDeaths,\r\n            recovered: country.recovered,\r\n            todayRecovered: country.todayRecovered,\r\n            active: country.active,\r\n            critical: country.critical,\r\n            casesPerOneMillion: country.casesPerOneMillion,\r\n            deathsPerOneMillion: country.deathsPerOneMillion,\r\n            tests: country.tests,\r\n            testsPerOneMillion: country.testsPerOneMillion,\r\n            population: country.population,\r\n            continent: country.continent,\r\n            oneCasePerPeople: country.oneCasePerPeople,\r\n            oneDeathPerPeople: country.oneDeathPerPeople,\r\n            oneTestPerPeople: country.oneTestPerPeople,\r\n            activePerOneMillion: country.activePerOneMillion,\r\n            recoveredPerOneMillion: country.recoveredPerOneMillion,\r\n            criticalPerOneMillion: country.criticalPerOneMillion\r\n        }));\r\n        setCountries(countries);\r\n        console.log(\"cccccunnttt\",countries.map(bill => bill.population).reduce((acc, bill) => bill + acc))\r\n\r\n      });\r\n  };\r\n\r\n  getCountriesData(); \r\n\r\n}, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-12 title\">\r\n                <h1>Covid-19 Statistics</h1>\r\n            </div>\r\n            <div className=\"col-12 px-0\">\r\n                <CardDashboard className=\"red\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"title\">Total World Population</div>\r\n                                <div className=\"number pulsate\">{countries.map(country => country.population).reduce((acc, country) => country + acc,0)}</div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <BsPeopleFill size=\"4em\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardDashboard>\r\n            </div>\r\n            <div className=\"col-4 px-0\">\r\n                <CardDashboard className=\"blue\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"title\">Total Countries</div>\r\n                                <div className=\"number pulsate\">{countries.length}</div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <GrMapLocation size=\"4em\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardDashboard>\r\n            </div>\r\n            <div className=\"col-4 px-0\">\r\n                <CardDashboard className=\"green\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"title\">Total Cases</div>\r\n                                {\r\n                                <div className=\"number pulsate\">{countries.map(country => country.cases).reduce((acc, country) => country + acc,0)}</div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <AiFillAlert size=\"4em\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardDashboard>\r\n            </div>\r\n            <div className=\"col-4 px-0\">\r\n                <CardDashboard className=\"orange\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"title\">Total Recovered</div>\r\n                                <div className=\"number pulsate\">{countries.map(country => country.recovered).reduce((acc, country) => country + acc,0)}</div>\r\n                            </div>\r\n                            <div className=\"col-auto\">\r\n                                <FaHospitalAlt size=\"4em\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardDashboard>\r\n            </div>\r\n            <div className=\"col-12 px-0\">\r\n                <Card className=\"red\">\r\n                    <div className=\"card-title\">\r\n                        <h3>Tables</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                <th className=\"col-1\">Country Code</th>\r\n                                    <th className=\"col-8\">Name</th>\r\n                                    <th className=\"col-8\">Cases</th>\r\n                                    <th className=\"col-8\">Today Cases</th>\r\n                                    <th className=\"col-8\">Deaths</th>\r\n                                    <th className=\"col-8\">Today Deaths</th>\r\n                                    <th className=\"col-8\">Recovered</th>\r\n                                    <th className=\"col-8\">Today recovered</th>\r\n                                    <th className=\"col-8\">Critical</th>\r\n                                    <th className=\"col-8\">Cases per million</th>\r\n                                    <th className=\"col-8\">Deaths per million</th>\r\n                                    <th className=\"col-8\">Tests per million</th>\r\n                                    <th className=\"col-8\">Population</th>\r\n                                    <th className=\"col-8\">Continent</th>\r\n                                    <th className=\"col-8\">One cases per people</th>\r\n                                    <th className=\"col-8\">One death per people</th>\r\n                                    <th className=\"col-8\">One Tests per people</th>\r\n                                    <th className=\"col-8\">Active per million</th>\r\n                                    <th className=\"col-8\">Recovered per million</th>\r\n                                    <th className=\"col-8\">Critical per million</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            \r\n                                {countries.map(country => (\r\n\r\n                                    <tr>\r\n                                    <td style={{ textAlign: 'center' }}>{ country.value }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.name }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.cases }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{country.todayCases}</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.deaths }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.todayDeaths }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.recovered }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.todayRecovered }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.critical }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.casesPerOneMillion }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.deathsPerOneMillion }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.testsPerOneMillion }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.population }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.continent }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.oneCasePerPeople }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.oneDeathPerPeople }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.oneTestPerPeople }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.activePerOneMillion }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.recoveredPerOneMillion }</td>\r\n                                        <td style={{ textAlign: 'center' }}>{ country.criticalPerOneMillion }</td>\r\n                                        \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Table = styled.table`\r\n  overflow-x: scroll;\r\n  width: 100%;\r\n  display: table;\r\n  border-collapse: collapse;\r\n  border-spacing: 1px;\r\n  border-color: grey;\r\n\r\n  @media screen and (max-width: 790px) {\r\n    display: block !important;\r\n    /* width: 100%; */\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n\r\n  thead {\r\n    display: table-header-group;\r\n    vertical-align: middle;\r\n    border-color: inherit;\r\n\r\n    tr {\r\n      display: table-row;\r\n      vertical-align: inherit;\r\n      border-color: inherit;\r\n    }\r\n\r\n    th {\r\n      vertical-align: bottom;\r\n      border-bottom: 2px solid #dee2e6;\r\n      padding: .75rem;\r\n    }\r\n\r\n    font-size: 7px;\r\n    color: #444;\r\n  }\r\n\r\n  tbody {\r\n    font-size: 8px;\r\n    color: #464e5f;\r\n\r\n    display: table-row-group;\r\n    vertical-align: middle;\r\n    border-color: inherit;\r\n\r\n    td {\r\n      display: table-cell;\r\n      padding: .75rem;\r\n      vertical-align: top;\r\n      border-top: 1px solid #dee2e6;\r\n    }\r\n  }\r\n\r\n  .edit, .eraser, .info {\r\n    margin: 0 3px;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n    padding: 8px 10px;\r\n    border-radius: 60px;\r\n    color: #fff;\r\n    border: none;\r\n    font-weight: 400;\r\n    transition: all 0.2s;\r\n\r\n    &:hover {\r\n      filter: brightness(90%);\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}